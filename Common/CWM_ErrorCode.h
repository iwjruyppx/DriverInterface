
#ifndef __CWM_ERROR_CODE_H__
#define __CWM_ERROR_CODE_H__

typedef enum {
	FASTEST = 10,
	GAME = 20,
	RATE_33 = 30,
	RATE_25 = 40,
	UI = 60,
	RATE_10 = 100,
	NORMAL = 200
} RATE;

typedef enum {
	MODE_BYPASS = 0,
	MODE_ACC_INT,
	MODE_MAG_INT,
	MODE_GYRO_INT,
	MODE_LIGHT_INT,
	MODE_PROXIMITY_INT,
	MODE_PRESSURE_INT,
	MODE_ACC_MOTION_INT,
	MODE_GYRO_FIFO_STREAM,
	MODE_TEMPERATURE_INIT,
} SENSORS_MODE;

typedef enum {
	INTERRUPT_OFF = 0,
	INTERRUPT_USE_INT1 = 1,
	INTERRUPT_USE_INT2 = 2,
} INTERRUPT_SETTING;

typedef enum {
	SENSOR_INTERRUPT_NON = 0,
	SENSOR_INTERRUPT_MOTION,
	SENSOR_INTERRUPT_NON_MOTION,
	SENSOR_INTERRUPT_DATA_READY,
} SENSOR_INTERRUPT_STATUs;

#define CWM_ERROR_QUEUE_FULL -21
#define CWM_ERROR_QUEUE_EMPTY -20

#define CWM_ERROR_CMD_NOT_FOUND -12
#define CWM_ERROR_NULL_POINT -11
#define CWM_ERROR_MEMORY_ALLOC_FAIL -10

#define CWM_ERROR_NO_DATA	-9
#define CWM_ERROR_DATA_BLOCK	-8
#define CWM_ERROR_SPI			-7
#define CWM_ERROR_BUS_RW        -6

#define CWM_ERROR_NO_USEL	 	-5
#define CWM_ERROR_NO_INITIAL	-4

#define CWM_ERROR_ALREADY_INITIAL -3
#define CWM_ERROR_NOT_FOUND -2
#define CWM_ERROR -1

#define CWM_NON 0

#define CWM_SUCCESS 1

#endif /* __CWM_ERROR_CODE_H__ */